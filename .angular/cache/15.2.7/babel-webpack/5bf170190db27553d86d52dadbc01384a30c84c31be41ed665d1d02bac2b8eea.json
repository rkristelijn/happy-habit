{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction AppComponent_div_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵelement(1, \"img\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const j_r3 = ctx.$implicit;\n    const i_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", \"assets/negative/\" + ctx_r2.uniqueArray[+i_r1 * 4 + +j_r3] + \".jpeg\", i0.ɵɵsanitizeUrl)(\"alt\", \"Responsive image\" + ctx_r2.uniqueArray[+i_r1 * 4 + +j_r3]);\n  }\n}\nconst _c0 = function () {\n  return [0, 1, 2, 3];\n};\nfunction AppComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵtemplate(1, AppComponent_div_1_div_1_Template, 2, 2, \"div\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpureFunction0(1, _c0));\n  }\n}\nexport class AppComponent {\n  constructor() {\n    this.title = 'happy-habit2';\n    const array = [];\n    // generate 65 random numbers between 0 and 16\n    for (let i = 0; i < 64; i++) {\n      const min = 0;\n      const max = 16;\n      array.push(Math.floor(Math.random() * (max - min + 1) + min));\n    }\n    const uniqueArray = [...new Set(array)];\n    // get only the first elements\n    this.uniqueArray = uniqueArray.splice(0, 16);\n    this.randomNumber = Math.floor(Math.random() * 16);\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)();\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"happy-habit2-root\"]],\n  decls: 2,\n  vars: 2,\n  consts: [[1, \"container\"], [\"class\", \"row\", 4, \"ngFor\", \"ngForOf\"], [1, \"row\"], [\"class\", \"col-sm mt-4\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-sm\", \"mt-4\"], [1, \"img-fluid\", 3, \"src\", \"alt\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, AppComponent_div_1_Template, 2, 2, \"div\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpureFunction0(1, _c0));\n    }\n  },\n  dependencies: [i1.NgForOf],\n  encapsulation: 2\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ctx_r2","uniqueArray","i_r1","j_r3","ɵɵsanitizeUrl","ɵɵtemplate","AppComponent_div_1_div_1_Template","ɵɵpureFunction0","_c0","AppComponent","constructor","title","array","i","min","max","push","Math","floor","random","Set","splice","randomNumber","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","AppComponent_div_1_Template"],"sources":["/Users/nlrxk0145/github/happy-habit/src/app/app.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'happy-habit2-root',\n  template: `\n    <div class=\"container\">\n      <div *ngFor=\"let i of [0, 1, 2, 3]\" class=\"row\">\n        <div *ngFor=\"let j of [0, 1, 2, 3]\" class=\"col-sm mt-4\">\n          <img\n            [src]=\"'assets/negative/' + uniqueArray[+i * 4 + +j] + '.jpeg'\"\n            class=\"img-fluid\"\n            [alt]=\"'Responsive image' + uniqueArray[+i * 4 + +j]\"\n          />\n        </div>\n      </div>\n    </div>\n  `,\n})\nexport class AppComponent {\n  title = 'happy-habit2';\n  uniqueArray: number[];\n  randomNumber: number;\n\n  constructor() {\n    const array = [];\n\n    // generate 65 random numbers between 0 and 16\n    for (let i = 0; i < 64; i++) {\n      const min = 0;\n      const max = 16;\n      array.push(Math.floor(Math.random() * (max - min + 1) + min));\n    }\n\n    const uniqueArray = [...new Set(array)];\n    // get only the first elements\n    this.uniqueArray = uniqueArray.splice(0, 16);\n\n    this.randomNumber = Math.floor(Math.random() * 16);\n  }\n}\n"],"mappings":";;;;IAOQA,EAAA,CAAAC,cAAA,aAAwD;IACtDD,EAAA,CAAAE,SAAA,aAIE;IACJF,EAAA,CAAAG,YAAA,EAAM;;;;;;IAJFH,EAAA,CAAAI,SAAA,GAA+D;IAA/DJ,EAAA,CAAAK,UAAA,6BAAAC,MAAA,CAAAC,WAAA,EAAAC,IAAA,QAAAC,IAAA,aAAAT,EAAA,CAAAU,aAAA,CAA+D,6BAAAJ,MAAA,CAAAC,WAAA,EAAAC,IAAA,QAAAC,IAAA;;;;;;;;IAHrET,EAAA,CAAAC,cAAA,aAAgD;IAC9CD,EAAA,CAAAW,UAAA,IAAAC,iCAAA,iBAMM;IACRZ,EAAA,CAAAG,YAAA,EAAM;;;IAPeH,EAAA,CAAAI,SAAA,GAAe;IAAfJ,EAAA,CAAAK,UAAA,YAAAL,EAAA,CAAAa,eAAA,IAAAC,GAAA,EAAe;;;AAW1C,OAAM,MAAOC,YAAY;EAKvBC,YAAA;IAJA,KAAAC,KAAK,GAAG,cAAc;IAKpB,MAAMC,KAAK,GAAG,EAAE;IAEhB;IACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;MAC3B,MAAMC,GAAG,GAAG,CAAC;MACb,MAAMC,GAAG,GAAG,EAAE;MACdH,KAAK,CAACI,IAAI,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,IAAIJ,GAAG,GAAGD,GAAG,GAAG,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC;;IAG/D,MAAMb,WAAW,GAAG,CAAC,GAAG,IAAImB,GAAG,CAACR,KAAK,CAAC,CAAC;IACvC;IACA,IAAI,CAACX,WAAW,GAAGA,WAAW,CAACoB,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC;IAE5C,IAAI,CAACC,YAAY,GAAGL,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,EAAE,CAAC;EACpD;;AApBWV,YAAY,C;mBAAZA,YAAY;AAAA;AAAZA,YAAY,C;QAAZA,YAAY;EAAAc,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAbrBnC,EAAA,CAAAC,cAAA,aAAuB;MACrBD,EAAA,CAAAW,UAAA,IAAA0B,2BAAA,iBAQM;MACRrC,EAAA,CAAAG,YAAA,EAAM;;;MATeH,EAAA,CAAAI,SAAA,GAAe;MAAfJ,EAAA,CAAAK,UAAA,YAAAL,EAAA,CAAAa,eAAA,IAAAC,GAAA,EAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}